var r=class{dp=[];path=[];calcPath(o,t){if(o>=t.length||o<0)throw new Error("Invalid starting node");this.dp=Array.from({length:1<<t.length},()=>Array(t.length).fill(1/0)),this.path=Array.from({length:1<<t.length},()=>Array(t.length).fill(-1)),this.dp[1<<o][o]=0;for(let e=0;e<1<<t.length;e++)for(let l=0;l<t.length;l++)if(this.dp[e][l]!=-1)for(let n=0;n<t.length;n++)(e&1<<n)==1||t[l][n]==-1||this.dp[e^1<<n][n]>this.dp[e][l]+t[l][n]&&(this.dp[e^1<<n][n]=this.dp[e][l]+t[l][n],this.path[e^1<<n][n]=l);let s=1/0,h=-1,g=(1<<t.length)-1;for(let e=0;e<t.length;e++)e!=o&&s>this.dp[(1<<t.length)-1][e]&&(s=this.dp[(1<<t.length)-1][e],h=e);if(s>=1/0){console.log("Cannot construct a valid tour");return}let i=[];for(;h!=-1;){i.push(h);let e=h;h=this.path[g][h],g^=1<<e}return i.reverse(),console.log("Minimum Cost: ",s),console.log("Path: ",i),{cost:s,path:i}}};addEventListener("message",({data:p})=>{let{vertices:o,edges:t}=p,h=new r().calcPath(0,t);postMessage(h)});
